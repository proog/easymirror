<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ICON_ARROW" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\arrow.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ICON_BROWSE" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\browse.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ICON_CANCEL" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\cancel.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ICON_COMPARE" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\compare.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ICON_MIRROR" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\mirror.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="COMPLETE_MATCH" xml:space="preserve">
    <value>The source and destination directories match.</value>
  </data>
  <data name="APP_NAME" xml:space="preserve">
    <value>EasyMirror</value>
  </data>
  <data name="BROWSE" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="CANCEL" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="COMPARE" xml:space="preserve">
    <value>Compare</value>
  </data>
  <data name="MASTER_DIRECTORY" xml:space="preserve">
    <value>Source directory:</value>
  </data>
  <data name="MIRROR" xml:space="preserve">
    <value>Mirror</value>
  </data>
  <data name="MIRROR_DIRECTORY" xml:space="preserve">
    <value>Destination directory:</value>
  </data>
  <data name="TOTAL_PROGRESS" xml:space="preserve">
    <value>Progress:</value>
  </data>
  <data name="USER_CANCELLED_COMPARE" xml:space="preserve">
    <value>The compare operation was cancelled.</value>
  </data>
  <data name="USER_CANCELLED_MIRROR" xml:space="preserve">
    <value>The mirror operation was cancelled.</value>
  </data>
  <data name="MIRROR_COMPLETED" xml:space="preserve">
    <value>The mirror operation was completed successfully.</value>
  </data>
  <data name="MASTER_MIRROR_CONFLICT" xml:space="preserve">
    <value>The source and destination directories cannot contain each other. Please select a different directory.</value>
  </data>
  <data name="DELETE_DIRECTORY" xml:space="preserve">
    <value>Unnecessary directory: </value>
  </data>
  <data name="DELETE_FILE" xml:space="preserve">
    <value>Unnecessary file: </value>
  </data>
  <data name="NEW_DIRECTORY" xml:space="preserve">
    <value>New directory: </value>
  </data>
  <data name="NEW_FILE" xml:space="preserve">
    <value>New file: </value>
  </data>
  <data name="OVERWRITE_FILE" xml:space="preserve">
    <value>Updated file: </value>
  </data>
  <data name="easymirrorlogo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\easymirrorlogo.png;System.Drawing.Bitmap, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="DIRECTORY_SEPARATOR" xml:space="preserve">
    <value>\</value>
  </data>
  <data name="DIRECTORIES_TO_CREATE" xml:space="preserve">
    <value> directories to create</value>
  </data>
  <data name="DIRECTORIES_TO_DELETE" xml:space="preserve">
    <value> directories to delete</value>
  </data>
  <data name="FILES_TO_COPY" xml:space="preserve">
    <value> files to copy</value>
  </data>
  <data name="FILES_TO_DELETE" xml:space="preserve">
    <value> files to delete</value>
  </data>
  <data name="FILES_TO_OVERWRITE" xml:space="preserve">
    <value> files to update</value>
  </data>
  <data name="THERE_ARE" xml:space="preserve">
    <value>There are </value>
  </data>
  <data name="PATH_TOO_LONG" xml:space="preserve">
    <value>EasyMirror encountered a path too long for the filesystem. Comparison cannot continue.</value>
  </data>
  <data name="ABOUT_TITLE" xml:space="preserve">
    <value>About EasyMirror</value>
  </data>
  <data name="BY" xml:space="preserve">
    <value>by Per Mortensen, 2011-2012</value>
  </data>
  <data name="ICONS_FROM" xml:space="preserve">
    <value>Icons from</value>
  </data>
  <data name="VERSION" xml:space="preserve">
    <value>0.2.2</value>
  </data>
  <data name="VERSION_TITLE" xml:space="preserve">
    <value>version </value>
  </data>
  <data name="CLOSE" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="STATUS_COMPARING" xml:space="preserve">
    <value>Comparing...</value>
  </data>
  <data name="STATUS_COPYING" xml:space="preserve">
    <value>Copying </value>
  </data>
  <data name="STATUS_CREATING" xml:space="preserve">
    <value>Creating </value>
  </data>
  <data name="STATUS_DELETING" xml:space="preserve">
    <value>Deleting </value>
  </data>
  <data name="STATUS_MIRRORING" xml:space="preserve">
    <value>Mirroring...</value>
  </data>
  <data name="STATUS_READY" xml:space="preserve">
    <value>Ready.</value>
  </data>
  <data name="STATUS_UPDATING" xml:space="preserve">
    <value>Updating </value>
  </data>
  <data name="EXCEPTION_MESSAGE" xml:space="preserve">
    <value>The error reported to EasyMirror was: </value>
  </data>
  <data name="UNAUTHORIZED_ACCESS" xml:space="preserve">
    <value>EasyMirror encountered a path for which you do not have access rights. Comparison cannot continue.</value>
  </data>
  <data name="UNKNOWN_EXCEPTION" xml:space="preserve">
    <value>An unknown error occurred.</value>
  </data>
  <data name="BAD_OPERATIONS" xml:space="preserve">
    <value>EasyMirror encountered errors while mirroring. The following operations were not completed successfully due to access restrictions or read errors:</value>
  </data>
  <data name="BAD_PATHS" xml:space="preserve">
    <value>EasyMirror encountered errors while comparing. The following files and directories cannot be mirrored/updated due to access restrictions or read errors:</value>
  </data>
  <data name="WARNING" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>